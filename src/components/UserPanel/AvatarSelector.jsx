import { useState } from "react"
import { PopoverClose } from "@radix-ui/react-popover";
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover"
import { Info, Check } from "lucide-react"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { useDB } from "@/contexts/DBContext"



export default function AvatarSelector({ currentAvatar, setCurrentAvatar }) {
    const [dicebearAvatarList, setDicebearAvatarList] = useState([
        "Jameson", "Easton", "Katherine",
        "Ethan", "John", "Michael",
        "David", "Eliza", "Olivia",
        "Emma", "Ava", "Isabella",
        "Oliver", "Charlotte", "Elijah",
        "Aria", "Liam", "Mia",
    ].map(name => `https://api.dicebear.com/9.x/pixel-art/svg?seed=${name}&scale=120`))
    const [avatarURLInput, setAvatarURLInput] = useState("")

    const avatarClassName = "cursor-pointer hover:scale-125 transition-all duration-50"

    return (
        <>
            <Label>
                Avatar
            </Label>
            <Popover>
                <PopoverTrigger asChild>
                    <Avatar className={avatarClassName}>
                        <AvatarImage src={currentAvatar} />
                        <AvatarFallback>CN</AvatarFallback>
                    </Avatar>
                </PopoverTrigger>
                <PopoverContent side="right" className="w-96 m-8 ml-0 z-50 overflow-hidden" >
                    <div className="flex items-center justify-start p-4 pt-0">
                        <h3>Choose a new avatar</h3>
                    </div>
                    <div className="flex flex-wrap items-center justify-center gap-4">
                        {dicebearAvatarList.map((avatarURL, index) => (
                            <Avatar
                                key={index}
                                className={avatarClassName}
                                onClick={() => { setCurrentAvatar(avatarURL) }}
                            >
                                <AvatarImage src={avatarURL} />
                                <AvatarFallback>...</AvatarFallback>
                            </Avatar>
                        ))}
                    </div>
                    <div className="flex items-center gap-2 pl-2 pt-4 text-muted-foreground">
                        <div>
                            <Info className="w-4 h-4" />
                        </div>
                        <span className="text-xs"> above avatars are generated by dicebear.com</span>
                    </div>
                    <div className="flex flex-col items-start justify-center p-4 pt-0 mt-8">
                        <h3>Or use avatar from your own URL</h3>
                        <div className="flex items-center justify-center gap-2 w-full">
                            <Avatar className="w-10 h-10">
                                {avatarURLInput.length > 0 ?
                                    <AvatarImage src={avatarURLInput} />
                                    :
                                    <AvatarImage src="https://unavatar.io/twitter/elonmusk" />}
                                <AvatarFallback>dude</AvatarFallback>
                            </Avatar>
                            <Input
                                className="w-full my-2"
                                placeholder="https://unavatar.io/twitter/elonmusk"
                                value={avatarURLInput}
                                onChange={(e) => { setAvatarURLInput(e.target.value) }}
                            />
                            <PopoverClose disabled={!avatarURLInput}>
                                <Button
                                    disabled={!avatarURLInput}
                                    onClick={() => { setCurrentAvatar(avatarURLInput) }}>
                                    <Check className="w-4 h-4" />
                                </Button>
                            </PopoverClose>
                        </div>
                    </div>
                </PopoverContent>
            </Popover>
        </>
    )
}